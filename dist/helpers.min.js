"use strict";function _regeneratorRuntime(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */_regeneratorRuntime=function _regeneratorRuntime(){return exports};var exports={},Op=Object.prototype,hasOwn=Op.hasOwnProperty,defineProperty=Object.defineProperty||function(obj,key,desc){obj[key]=desc.value},$Symbol="function"==typeof Symbol?Symbol:{},iteratorSymbol=$Symbol.iterator||"@@iterator",asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator",toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";function define(obj,key,value){return Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}),obj[key]}try{define({},"")}catch(err){define=function define(obj,key,value){return obj[key]=value}}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator,generator=Object.create(protoGenerator.prototype),context=new Context(tryLocsList||[]);return defineProperty(generator,"_invoke",{value:makeInvokeMethod(innerFn,self,context)}),generator}function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)}}catch(err){return{type:"throw",arg:err}}}exports.wrap=wrap;var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,function(){return this});var getProto=Object.getPrototypeOf,NativeIteratorPrototype=getProto&&getProto(getProto(values([])));NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)&&(IteratorPrototype=NativeIteratorPrototype);var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);function defineIteratorMethods(prototype){["next","throw","return"].forEach(function(method){define(prototype,method,function(arg){return this._invoke(method,arg)})})}function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if("throw"!==record.type){var result=record.arg,value=result.value;return value&&"object"==_typeof(value)&&hasOwn.call(value,"__await")?PromiseImpl.resolve(value.__await).then(function(value){invoke("next",value,resolve,reject)},function(err){invoke("throw",err,resolve,reject)}):PromiseImpl.resolve(value).then(function(unwrapped){result.value=unwrapped,resolve(result)},function(error){return invoke("throw",error,resolve,reject)})}reject(record.arg)}var previousPromise;defineProperty(this,"_invoke",{value:function value(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl(function(resolve,reject){invoke(method,arg,resolve,reject)})}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}})}function makeInvokeMethod(innerFn,self,context){var state="suspendedStart";return function(method,arg){if("executing"===state)throw new Error("Generator is already running");if("completed"===state){if("throw"===method)throw arg;return doneResult()}for(context.method=method,context.arg=arg;;){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult}}if("next"===context.method)context.sent=context._sent=context.arg;else if("throw"===context.method){if("suspendedStart"===state)throw state="completed",context.arg;context.dispatchException(context.arg)}else"return"===context.method&&context.abrupt("return",context.arg);state="executing";var record=tryCatch(innerFn,self,context);if("normal"===record.type){if(state=context.done?"completed":"suspendedYield",record.arg===ContinueSentinel)continue;return{value:record.arg,done:context.done}}"throw"===record.type&&(state="completed",context.method="throw",context.arg=record.arg)}}}function maybeInvokeDelegate(delegate,context){var methodName=context.method,method=delegate.iterator[methodName];if(undefined===method)return context.delegate=null,"throw"===methodName&&delegate.iterator["return"]&&(context.method="return",context.arg=undefined,maybeInvokeDelegate(delegate,context),"throw"===context.method)||"return"!==methodName&&(context.method="throw",context.arg=new TypeError("The iterator does not provide a '"+methodName+"' method")),ContinueSentinel;var record=tryCatch(method,delegate.iterator,context.arg);if("throw"===record.type)return context.method="throw",context.arg=record.arg,context.delegate=null,ContinueSentinel;var info=record.arg;return info?info.done?(context[delegate.resultName]=info.value,context.next=delegate.nextLoc,"return"!==context.method&&(context.method="next",context.arg=undefined),context.delegate=null,ContinueSentinel):info:(context.method="throw",context.arg=new TypeError("iterator result is not an object"),context.delegate=null,ContinueSentinel)}function pushTryEntry(locs){var entry={tryLoc:locs[0]};1 in locs&&(entry.catchLoc=locs[1]),2 in locs&&(entry.finallyLoc=locs[2],entry.afterLoc=locs[3]),this.tryEntries.push(entry)}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal",delete record.arg,entry.completion=record}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}],tryLocsList.forEach(pushTryEntry,this),this.reset(!0)}function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod)return iteratorMethod.call(iterable);if("function"==typeof iterable.next)return iterable;if(!isNaN(iterable.length)){var i=-1,next=function next(){for(;++i<iterable.length;)if(hasOwn.call(iterable,i))return next.value=iterable[i],next.done=!1,next;return next.value=undefined,next.done=!0,next};return next.next=next}}return{next:doneResult}}function doneResult(){return{value:undefined,done:!0}}return GeneratorFunction.prototype=GeneratorFunctionPrototype,defineProperty(Gp,"constructor",{value:GeneratorFunctionPrototype,configurable:!0}),defineProperty(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,"GeneratorFunction"),exports.isGeneratorFunction=function(genFun){var ctor="function"==typeof genFun&&genFun.constructor;return!!ctor&&(ctor===GeneratorFunction||"GeneratorFunction"===(ctor.displayName||ctor.name))},exports.mark=function(genFun){return Object.setPrototypeOf?Object.setPrototypeOf(genFun,GeneratorFunctionPrototype):(genFun.__proto__=GeneratorFunctionPrototype,define(genFun,toStringTagSymbol,"GeneratorFunction")),genFun.prototype=Object.create(Gp),genFun},exports.awrap=function(arg){return{__await:arg}},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,asyncIteratorSymbol,function(){return this}),exports.AsyncIterator=AsyncIterator,exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){void 0===PromiseImpl&&(PromiseImpl=Promise);var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then(function(result){return result.done?result.value:iter.next()})},defineIteratorMethods(Gp),define(Gp,toStringTagSymbol,"Generator"),define(Gp,iteratorSymbol,function(){return this}),define(Gp,"toString",function(){return"[object Generator]"}),exports.keys=function(val){var object=Object(val),keys=[];for(var key in object)keys.push(key);return keys.reverse(),function next(){for(;keys.length;){var key=keys.pop();if(key in object)return next.value=key,next.done=!1,next}return next.done=!0,next}},exports.values=values,Context.prototype={constructor:Context,reset:function reset(skipTempReset){if(this.prev=0,this.next=0,this.sent=this._sent=undefined,this.done=!1,this.delegate=null,this.method="next",this.arg=undefined,this.tryEntries.forEach(resetTryEntry),!skipTempReset)for(var name in this)"t"===name.charAt(0)&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))&&(this[name]=undefined)},stop:function stop(){this.done=!0;var rootRecord=this.tryEntries[0].completion;if("throw"===rootRecord.type)throw rootRecord.arg;return this.rval},dispatchException:function dispatchException(exception){if(this.done)throw exception;var context=this;function handle(loc,caught){return record.type="throw",record.arg=exception,context.next=loc,caught&&(context.method="next",context.arg=undefined),!!caught}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i],record=entry.completion;if("root"===entry.tryLoc)return handle("end");if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc"),hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}else if(hasCatch){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0)}else{if(!hasFinally)throw new Error("try statement without catch or finally");if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}}}},abrupt:function abrupt(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break}}finallyEntry&&("break"===type||"continue"===type)&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc&&(finallyEntry=null);var record=finallyEntry?finallyEntry.completion:{};return record.type=type,record.arg=arg,finallyEntry?(this.method="next",this.next=finallyEntry.finallyLoc,ContinueSentinel):this.complete(record)},complete:function complete(record,afterLoc){if("throw"===record.type)throw record.arg;return"break"===record.type||"continue"===record.type?this.next=record.arg:"return"===record.type?(this.rval=this.arg=record.arg,this.method="return",this.next="end"):"normal"===record.type&&afterLoc&&(this.next=afterLoc),ContinueSentinel},finish:function finish(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc)return this.complete(entry.completion,entry.afterLoc),resetTryEntry(entry),ContinueSentinel}},"catch":function _catch(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if("throw"===record.type){var thrown=record.arg;resetTryEntry(entry)}return thrown}}throw new Error("illegal catch attempt")},delegateYield:function delegateYield(iterable,resultName,nextLoc){return this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc},"next"===this.method&&(this.arg=undefined),ContinueSentinel}},exports}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{Promise.resolve(value).then(_next,_throw)}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(undefined)})}}function _typeof(obj){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _toPropertyKey(arg){var key=_toPrimitive(arg,"string");return _typeof(key)==="symbol"?key:String(key)}function _toPrimitive(input,hint){if(_typeof(input)!=="object"||input===null)return input;var prim=input[Symbol.toPrimitive];if(prim!==undefined){var res=prim.call(input,hint||"default");if(_typeof(res)!=="object")return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return(hint==="string"?String:Number)(input)}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_x,_r,_arr=[],_n=!0,_d=!1;try{if(_x=(_i=_i.call(arr)).next,0===i){if(Object(_i)!==_i)return;_n=!1}else for(;!(_n=(_s=_x.call(_i)).done)&&(_arr.push(_s.value),_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{if(!_n&&null!=_i["return"]&&(_r=_i["return"](),Object(_r)!==_r))return}finally{if(_d)throw _e}}return _arr}}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}/**
 * Локализация по умолчанию
 */var locale="ru-RU";/**
 * Локализация по умолчанию
 */exports.locale=locale;/**
 * Определение окружения по домену
 * https://any-verme.ru -> { server: 'any', mode: 'development' }
 * @param {string} [name='verme'] - ключевое имя
 * @return {{server: string, mode: string}}
 */exports.getEnvironment=function(){var _URL$match;var name=arguments.length>0&&arguments[0]!==undefined?arguments[0]:"verme";var URL=window.location.hostname;var isLocalServer=["127.0.0.1","localhost"].includes(URL);var regExp=new RegExp(["(?=-).*(?=\\.",name,")"].join(""));var environment=((_URL$match=URL.match(regExp))===null||_URL$match===void 0?void 0:_URL$match[0].replace("-",""))||"production";return{server:environment,mode:isLocalServer||environment!=="production"?"development":"production"}};/**
 * Определение казахского домена
 * https://any-domain.kz -> true
 * @return {boolean}
 */var isKZ=function isKZ(){return window.location.hostname.includes(".kz")};/**
 * Определение казахского домена
 * https://any-domain.kz -> true
 * @return {boolean}
 */exports.isKZ=isKZ;exports.cookie={/**
   * Формирование опций cookie
   * @param {Object} [options={}]
   * @return {string}
   */createOptions:function createOptions(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var allowedOptions=["Domain","Path","Expires","Max-Age","HttpOnly","Secure","SameSite"];var cookieOptions={Path:"/"};var _loop=function _loop(key){var option=allowedOptions.find(function(code){return code.toLowerCase()===key.toLowerCase()});var value=options[key];switch(option){case"Domain":case"Path":if(typeof value==="string"){cookieOptions[option]=value}break;case"Expires":{cookieOptions[option]=value instanceof Date?value.toUTCString():value;delete cookieOptions["Max-Age"];break}case"Max-Age":{if(typeof value==="number"){cookieOptions[option]=value;delete cookieOptions["Expires"]}break}case"HttpOnly":case"Secure":if(value===true){cookieOptions[option]=""}break;case"SameSite":{if(["None","Strict","Lax"].some(function(code){return code===value})){cookieOptions[option]=value}break}}};for(var key in options){_loop(key)}var optionsText=[];Object.entries(cookieOptions).forEach(function(pair){var value=pair.filter(Boolean).join("=");optionsText.push(value)});return optionsText.join("; ")},/**
   * Получение значения из Cookie по ключу
   * @param {string} name
   * @return {string}
   */get:function get(name){if(!name){return""}var pairs=document.cookie.split(";").map(function(value){return value.trim()});var encodeName=encodeURIComponent(name);var valueIndex=pairs.findIndex(function(string){return string.includes(encodeName)});if(valueIndex!==-1){var _pairs$valueIndex$spl=pairs[valueIndex].split("="),_pairs$valueIndex$spl2=_slicedToArray(_pairs$valueIndex$spl,2),value=_pairs$valueIndex$spl2[1];return value?decodeURIComponent(value):""}return""},/**
   * Установка значения в Cookie по ключу
   * @param {string} name
   * @param {string} value
   * @param {{
   *   Domain?: string,
   *   Path?: string,
   *   Expires?: (Date|string),
   *   'Max-Age'?: number,
   *   HttpOnly?: boolean,
   *   Secure?: boolean,
   *   SameSite?: string
   * }} [options]
   * @example SameSite: Strict | Lax | None
   */set:function set(name,value,options){if(!name){return}var pair=[name,value].filter(Boolean).map(function(string){return encodeURIComponent(string.trim())}).join("=");var params=this.createOptions(options);document.cookie=[pair,params].join("; ")},/**
   * Удаление Cookie по ключу
   * @param {string} name
   */"delete":function _delete(name){var value=this.get(name)?"<removed>":"";this.set(name,value,{"Max-Age":-1})}};/**
 * Определение типа переданного значения
 * @param {*} [value]
 * @return {string} - Undefined | Null | Number | String | Date | Function | Array | Object
 */var getType=function getType(value){switch(value){case undefined:return"Undefined";case null:return"Null";default:return value.constructor.name;}};/**
 * Определение типа переданного значения
 * @param {*} [value]
 * @return {string} - Undefined | Null | Number | String | Date | Function | Array | Object
 */exports.getType=getType;/**
 * Добавление ведущего нуля
 * 9 -> '09'
 * @param {string|number} value
 * @return {string}
 */var leadingZero=function leadingZero(value){var type=getType(value);var invalid=!value||!["Number","String"].some(function(allowed){return allowed===type});var number=invalid?0:value;return String(number).padStart(2,"0")};/**
 * Добавление ведущего нуля
 * 9 -> '09'
 * @param {string|number} value
 * @return {string}
 */exports.leadingZero=leadingZero;/**
 * Преобразование числа в сумму
 * 1840 -> '1 840 ₽'
 * @param {number|string} value
 * @param {number} [fraction=1]
 * @return {string}
 */exports.currencyMask=function(value){var fraction=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var KZ=isKZ();var currencyLocale=KZ?"ru-KZ":"ru-RU";var currency=KZ?"KZT":"RUB";return new Intl.NumberFormat(currencyLocale,{style:"currency",currency:currency,minimumFractionDigits:0,maximumFractionDigits:fraction}).format(value||0)};/**
 * Проверка объекта даты на валидность
 * @param {Date} [date]
 * @return {boolean}
 */var dateIsValid=function dateIsValid(date){return[!!date,date instanceof Date,!Number.isNaN(new Date(date).getTime())].every(Boolean)};/**
 * Проверка объекта даты на валидность
 * @param {Date} [date]
 * @return {boolean}
 */exports.dateIsValid=dateIsValid;/**
 * Преобразование даты в ISO формат
 * Wed Oct 21 2020 08:45:00 GMT+0300 -> '2020-10-21'
 * @param {Date} date
 * @return {string}
 */exports.toISODate=function(date){if(!dateIsValid(date)){return""}var options={year:"numeric",month:"2-digit",day:"2-digit"};return new Intl.DateTimeFormat("ru-RU",options).format(date).split(".").reverse().join("-")};/**
 * Преобразование даты в формат DD.MM.YYYY
 * Wed Oct 21 2020 08:45:00 GMT+0300 -> '21.10.2020'
 * @param {Date} date
 * @param {string} [timeZone='Europe/Moscow']
 * @return {string}
 */exports.dateToDateShort=function(date){var timeZone=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"Europe/Moscow";if(!dateIsValid(date)){return""}var options={day:"2-digit",month:"2-digit",year:"numeric"};if(timeZone){options.timeZone=timeZone}return new Intl.DateTimeFormat(locale,options).format(date)};/**
 * Преобразование ISO даты в формат DD.MM.YYYY
 * '1979-12-03' -> '03.12.1979'
 * @param {string} ISODate
 * @param {string} [timeZone='Europe/Moscow']
 * @return {string}
 */exports.ISOToDateFormat=function(ISODate){var timeZone=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"Europe/Moscow";var datePattern=/^(\d{4})-(\d{1,2})-(\d{1,2})$/;// 'YYYY-MM-DD'
var invalid=[!ISODate,getType(ISODate)!=="String",!datePattern.test(ISODate)].some(Boolean);if(invalid){return""}var options={year:"numeric",month:"2-digit",day:"2-digit"};if(timeZone){options.timeZone=timeZone}return new Intl.DateTimeFormat(locale,options).format(new Date(ISODate))};/**
 * Преобразование даты в формат DD.MM.YYYY, HH:MM
 * Wed Oct 21 2020 08:45:00 GMT+0300 -> '21.10.2020, 08:45'
 * @param {Date} date
 * @param {string} [timeZone='Europe/Moscow']
 * @return {string}
 */exports.dateTime=function(date){var timeZone=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"Europe/Moscow";if(!dateIsValid(date)){return""}var options={day:"2-digit",month:"2-digit",year:"numeric",hour12:false,hour:"numeric",minute:"2-digit"};if(timeZone){options.timeZone=timeZone}return new Intl.DateTimeFormat(locale,options).format(date)};/**
 * Преобразование даты в формат WW, DD MMMM YYYY
 * Wed Oct 21 2020 08:45:00 GMT+0300 -> '21 октября' | '21 октября 2020' | 'ср, 21 октября' | 'ср, 21 октября 2020'
 * @param {Object} payload={}
 * @param {Date} payload.date
 * @param {boolean} [payload.showWeekDay=false]
 * @param {boolean} [payload.showYear=true]
 * @param {string} [payload.timeZone='Europe/Moscow']
 * @return {string}
 */exports.dateToDateLong=function(){var _payload$showWeekDay,_payload$showYear,_payload$timeZone;var payload=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};if(!dateIsValid(payload.date)){return""}var date=payload.date;var showWeekDay=(_payload$showWeekDay=payload.showWeekDay)!==null&&_payload$showWeekDay!==void 0?_payload$showWeekDay:false;var showYear=(_payload$showYear=payload.showYear)!==null&&_payload$showYear!==void 0?_payload$showYear:true;var timeZone=(_payload$timeZone=payload.timeZone)!==null&&_payload$timeZone!==void 0?_payload$timeZone:"Europe/Moscow";var options={day:"numeric",month:"long"};if(showWeekDay){options.weekday="short"}if(showYear){options.year="numeric"}if(timeZone){options.timeZone=timeZone}var longDate=new Intl.DateTimeFormat(locale,options).format(date);return showYear?longDate.slice(0,-3):longDate};/**
 * Преобразование даты в формат HH:MM
 * Wed Oct 21 2020 08:45:00 GMT+0300 -> '08:45'
 * @param {Date} date
 * @param {string} [timeZone='Europe/Moscow']
 * @return {string}
 */exports.dateToHoursMinutes=function(date){var timeZone=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"Europe/Moscow";if(!dateIsValid(date)){return"00:00"}var options={hour12:false,minute:"2-digit",hour:"2-digit"};if(timeZone){options.timeZone=timeZone}return new Intl.DateTimeFormat(locale,options).format(date)};/**
 * Преобразование числа в формат времени HH:MM
 * 480 -> '08:00'
 * @param {number} value
 * @return {string}
 */exports.minutesToHoursMinutes=function(value){var type=getType(value);var invalid=!value||type!=="Number";var number=invalid?0:value;var absNumber=Math.abs(number);var sign=number<0?"-":"";var hours=leadingZero(Math.floor(absNumber/60));var minutes=leadingZero(absNumber%60);var time=[hours,minutes].join(":");return[sign,time].join("")};/**
 * Получение объекта с московским временем из даты
 * "2022-05-02T08:00:00Z" -> { hour: '12', minute: '00', timestamp: 1643041320000 }
 * @param {string} dateString
 * @return {{hour: string, minute: string, timestamp: number}}
 */exports.getMoscowTime=function(dateString){var date=new Date(dateString);if(!dateString||!dateIsValid(date)){return{hour:"00",minute:"00",timestamp:0}}var offset=+3;var newDate=new Date(date.getTime()+offset*3600*1000).toUTCString().replace(/ GMT$/,"");var localTime=new Date(newDate);return{hour:leadingZero(localTime.getHours()),minute:leadingZero(localTime.getMinutes()),timestamp:localTime.getTime()}};/**
 * Получение номера недели в году
 * Wed Oct 21 2020 08:45:00 GMT+0300 -> 43
 * @param {Date} [currentDate=Date]
 * @return {number}
 */var weekOfYear=function weekOfYear(){var currentDate=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Date;if(!dateIsValid(currentDate)){return 0}var date=new Date(currentDate.getTime());date.setHours(0,0,0,0);date.setDate(date.getDate()+3-(date.getDay()+6)%7);var firstWeek=new Date(date.getFullYear(),0,4);var MILLISECONDS_IN_DAY=86400000;// 24 * 60 * 60 * 1000
var currentYearDay=(date.getTime()-firstWeek.getTime())/MILLISECONDS_IN_DAY;return 1+Math.round((currentYearDay-3+(firstWeek.getDay()+6)%7)/7)};/**
 * Получение номера недели в году
 * Wed Oct 21 2020 08:45:00 GMT+0300 -> 43
 * @param {Date} [currentDate=Date]
 * @return {number}
 */exports.weekOfYear=weekOfYear;/**
 * Получения даты начала недели по номеру недели
 * 2020, 43 -> Wed Oct 21 2020 00:00:00 GMT+0300
 * @param {number} year
 * @param {number} weekNumber
 * @return {Date}
 */exports.weekNumberToDate=function(year,weekNumber){var validYear=!year||getType(year)!=="Number"?new Date().getFullYear():year;var validWeek=!weekNumber||getType(weekNumber)!=="Number"?weekOfYear():weekNumber;var startOfYear=new Date(validYear,0,1+(validWeek-1)*7);var day=startOfYear.getDay();var date=startOfYear.getDate()+(day<=4?-day+1:8-day);startOfYear.setDate(date);startOfYear.setHours(0,0,0,0);return startOfYear};/**
 * Окончания слов
 * 17, ['метр', 'метра', 'метров'] -> '17 метров'
 * @param {number|string} amount
 * @param {Array} titles
 * @return {string}
 */var wordEndings=function wordEndings(amount,titles){var amountType=getType(amount);var validAmount=["Number","String"].some(function(allowed){return allowed===amountType});var titlesType=getType(titles);var validTitles=[titlesType==="Array",(titles===null||titles===void 0?void 0:titles.length)===3].every(Boolean);if(!validAmount||!validTitles){return""}var number=Number.parseFloat(amount||0);var formatNumber=new Intl.NumberFormat("ru-RU").format(number);var word;// RU
if(number%10===1&&number%100!==11){word=titles[0]}else if(number%10>=2&&number%10<=4&&(number%100<10||number%100>=20)){word=titles[1]}else{word=titles[2]}return[formatNumber,word].join(" ")};/**
 * Окончания слов
 * 17, ['метр', 'метра', 'метров'] -> '17 метров'
 * @param {number|string} amount
 * @param {Array} titles
 * @return {string}
 */exports.wordEndings=wordEndings;/**
 * Преобразование числа в расстояние
 * 42 -> '42 метра' | 42 -> '42 м' | 1042 -> '1.42 км'
 * @param {number|string} distance
 * @param {boolean} [short=false]
 * @return {string}
 */exports.distanceFormat=function(distance){var _short=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var type=getType(distance);var validType=["Number","String"].some(function(allowed){return allowed===type});if(!distance||!validType){return""}var validDistance=Number.parseFloat(distance);if(validDistance>900){return"".concat(Math.round(validDistance/1000*10)/10," \u043A\u043C")}else if(_short){return"".concat(new Intl.NumberFormat(locale).format(validDistance)," \u043C")}return wordEndings(validDistance,["\u043C\u0435\u0442\u0440","\u043C\u0435\u0442\u0440\u0430","\u043C\u0435\u0442\u0440\u043E\u0432"])};/**
 * Получение преобразованного размера файла
 * 40031 -> '39.09 кБ'
 * @param {number} bytes
 * @return {string}
 */exports.bytesToSize=function(bytes){var invalid=[!bytes,getType(bytes)!=="Number"].some(Boolean);if(invalid){return"0 \u0431\u0430\u0439\u0442"}var kiloByte=1024;var unit=["\u0431\u0430\u0439\u0442","\u043A\u0411","\u041C\u0411","\u0413\u0411","\u0422\u0411","\u041F\u0411","\u042D\u0411","\u0417\u0411","\u0418\u0411"];if(bytes<kiloByte){return wordEndings(bytes,["\u0431\u0430\u0439\u0442","\u0431\u0430\u0439\u0442\u0430","\u0431\u0430\u0439\u0442"])}var sizeIndex=Math.floor(Math.log(bytes)/Math.log(kiloByte));var size=Math.round(bytes/Math.pow(kiloByte,sizeIndex)*100)/100;return[size,unit[sizeIndex]].join(" ")};/**
 * Преобразование файла в Base64
 * @param {File} file
 * @return {Promise<string>}
 */exports.convertFileToBase64=function(file){if(!file){return Promise.resolve("")}var reader=new FileReader;return new Promise(function(resolve){reader.onload=function(){resolve(reader.result.split("base64,",2)[1])};reader.readAsDataURL(file)})};/**
 * Сокращение ФИО до формата ФффИО или ФфффИ (если нет отчества)
 * 'Светлова Александра Андреевна' -> 'СвеАА'
 * 'Бекр Фуркад' -> 'БекрФ'
 * @param {string} fullName
 * @return {string}
 */exports.shortName=function(fullName){var invalid=[!fullName,getType(fullName)!=="String"].some(Boolean);if(invalid){return"\u2015\u2015"}var _fullName$match$map=fullName.match(/[^\s\d_.,'"`;:]+/gi).map(function(item){return[item[0].toUpperCase(),item.slice(1)].join("")}),_fullName$match$map2=_slicedToArray(_fullName$match$map,3),surname=_fullName$match$map2[0],firstname=_fullName$match$map2[1],patronymic=_fullName$match$map2[2];var firstnameInitials=firstname?firstname.slice(0,1):"";var patronymicInitials=patronymic?patronymic.slice(0,1):"";var limit;if(patronymic){limit=3}else if(firstname){limit=4}else{limit=5}return[surname.slice(0,limit),firstnameInitials,patronymicInitials].join("")};/**
 * Удаление ключей из объекта
 * ['a'], { a: 13, b: 42 } -> { b: 42 }
 * @param {Array} exclusionFields
 * @param {Object} sourceObject
 * @return {Object}
 */exports.removeObjectKeys=function(exclusionFields,sourceObject){var object=_objectSpread({},sourceObject||{});(exclusionFields||[]).forEach(function(key){delete object[key]});return object};/**
 * Рекурсивное (глубокое) копирование объекта (массива)
 * @param {Object} sourceObject
 * @return {Object}
 */var deepClone=function deepClone(sourceObject){if(!sourceObject||_typeof(sourceObject)!=="object"){return sourceObject}else if(sourceObject instanceof Date){return new Date(sourceObject)}var clone=Array.isArray(sourceObject)?[].concat(sourceObject):Object.assign({},sourceObject);Object.keys(clone).forEach(function(key){var value=sourceObject[key];clone[key]=_typeof(value)==="object"?deepClone(value):value});return clone};/**
 * Рекурсивное (глубокое) копирование объекта (массива)
 * @param {Object} sourceObject
 * @return {Object}
 */exports.deepClone=deepClone;/**
 * Мемоизация
 * const add = (x, y) => x + y;
 * const memoAdd = memo(add);
 *
 * memoAdd(24, 42); // Calculated
 * memoAdd(42, 24); // From cache
 * @param {Function} callback
 * @return {Function}
 */exports.memo=function(callback){return new Proxy(callback,{cache:new Map,apply:function apply(fn,context,args){args.sort();var key=args.toString();if(!this.cache.has(key)){this.cache.set(key,fn.apply(context,args))}return this.cache.get(key)}})};/**
 * Поиск по поисковой фразе в списке по переданным ключам объекта
 * @param {Object} payload={}
 * @param {string} [payload.search=''] - поисковая фраза
 * @param {Object[]} [payload.options=[]] - список объектов
 * @param {string[]} [payload.keys=[]] - список ключей объекта
 * @return {object[]} - Возвращает отфильтрованный список объект по поисковым словам
 */exports.searchByKeys=function(){var payload=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var search=payload.search||"";var options=payload.options||[];var searchableKeys=payload.keys||[];var searchWords=String(search).toLowerCase().match(/(?:[0-9A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE3F\uDE40\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDF02\uDF04-\uDF10\uDF12-\uDF33\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883\uD885-\uD887][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F\uDC41-\uDC46]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD32\uDD50-\uDD52\uDD55\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E\uDF25-\uDF2A]|\uD838[\uDC30-\uDC6D\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDCD0-\uDCEB\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF39\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A\uDF50-\uDFFF]|\uD888[\uDC00-\uDFAF])+/gim)||[];return options.flatMap(function(item){var concatValue=searchableKeys.map(function(key){var nestedKey=key.split(".");// Если ключ с вложениями, перебираем все вложения
// key a.b, object.a.b: 'value' -> 'value'
var nestedValue=nestedKey.reduce(function(accumulator,prop){return accumulator===null||accumulator===void 0?void 0:accumulator[prop]},item);return String(nestedValue).toLowerCase()}).filter(Boolean).join(", ");var matchingStrings=searchWords.filter(function(word){return concatValue.includes(word)});return matchingStrings.length===searchWords.length?[item]:[]})};/**
 * Проверка поддержки браузером копирования/вставки
 * @return {{copy: boolean, paste: boolean}}
 */exports.checkClipboardFunctionality=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _window$navigator;var actions,_window$navigator2,_window$navigator2$cl,clipboard,_window$navigator2$pe,permissions,_yield$permissions$qu,state;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:actions={copy:false,paste:false};if((_window$navigator=window.navigator)!==null&&_window$navigator!==void 0&&_window$navigator.clipboard){_context.next=3;break}return _context.abrupt("return",actions);case 3:_window$navigator2=window.navigator,_window$navigator2$cl=_window$navigator2.clipboard,clipboard=_window$navigator2$cl===void 0?{}:_window$navigator2$cl,_window$navigator2$pe=_window$navigator2.permissions,permissions=_window$navigator2$pe===void 0?{}:_window$navigator2$pe;// Проверяем доступность функционала копирования в браузере
if(!("writeText"in clipboard)){_context.next=14;break}_context.prev=5;_context.next=8;return clipboard.writeText("");case 8:actions.copy=true;_context.next=14;break;case 11:_context.prev=11;_context.t0=_context["catch"](5);console.error("Check copy filed. ".concat(_context.t0.message));case 14:if(!["query"in permissions,"readText"in clipboard].every(Boolean)){_context.next=26;break}_context.prev=15;_context.next=18;return permissions.query({name:"clipboard-read"});case 18:_yield$permissions$qu=_context.sent;state=_yield$permissions$qu.state;if(["granted","prompt"].some(function(allowedState){return allowedState===state})){actions.paste=true}_context.next=26;break;case 23:_context.prev=23;_context.t1=_context["catch"](15);console.error("Check paste filed. ".concat(_context.t1.message));case 26:return _context.abrupt("return",actions);case 27:case"end":return _context.stop();}},_callee,null,[[5,11],[15,23]])}));/**
 * Получение UTM-меток из поисковой строки
 * @param {string} prefix='utm_'
 * @return {Object|null}
 */exports.getUTMLabels=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var prefix,queryString,data,urlParams,_args2=arguments;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:prefix=_args2.length>0&&_args2[0]!==undefined?_args2[0]:"utm_";queryString=window.location.search;data={};if(queryString.includes(prefix)){urlParams=new URLSearchParams(queryString);urlParams.forEach(function(value,key){if(key.includes(prefix)){data[key.replace(prefix,"")]=value.trim()}})}return _context2.abrupt("return",Object.keys(data).length?data:null);case 5:case"end":return _context2.stop();}},_callee2)}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
